# ChatGalaxy CI/CD Pipeline - 2025 Standards
# 基于最新技术标准的现代化CI/CD工作流

name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      run_full_suite:
        description: 'Run full test suite'
        required: false
        default: 'false'
        type: boolean

jobs:
  # 前端构建和测试
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Type check
      run: pnpm run type-check
      
    - name: Lint check
      run: pnpm run lint
      
    - name: Format check
      run: pnpm run format:check
      
    - name: Build application
      run: pnpm run build
      
    - name: Run tests
      run: pnpm run test:unit
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        
  # 后端测试和安全扫描
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
        
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: './backend/requirements.txt'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio httpx
        
    - name: Lint with ruff
      run: |
        pip install ruff
        ruff check .
        ruff format --check .
        
    - name: Type check with mypy
      run: |
        pip install mypy
        mypy app --ignore-missing-imports
        
    - name: Security scan with bandit
      run: |
        pip install bandit[toml]
        bandit -r app -f json -o bandit-report.json
        
    - name: Run tests
      run: |
        pytest --cov=app --cov-report=xml --cov-report=html
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
        
  # 安全依赖扫描
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Frontend dependency audit
      run: |
        cd frontend
        npm audit --audit-level=high
        
    - name: Backend dependency audit
      run: |
        cd backend
        pip install safety
        safety check