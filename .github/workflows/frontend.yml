# Frontend CI/CD - Vue3 + TypeScript + Element Plus
# 2025年标准的前端构建测试和代码质量检查

name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20.19.0'
  PNPM_VERSION: '9'

jobs:
  # 代码质量检查
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: TypeScript type checking
      run: pnpm run type-check
      
    - name: ESLint code analysis
      run: pnpm run lint --max-warnings 0
      
    - name: Prettier format check
      run: |
        pnpm exec prettier --check src/
        
    - name: Vue component analysis
      run: |
        echo "Analyzing Vue components..."
        find src -name "*.vue" -type f | wc -l
        find src -name "*.ts" -type f | wc -l
        
  # 单元测试和覆盖率
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run unit tests
      run: pnpm run test:unit --coverage --reporter=verbose
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        
  # 构建验证
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    strategy:
      matrix:
        node-version: ['20.19.0', '22.12.0']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build application
      run: pnpm run build
      
    - name: Verify build output
      run: |
        ls -la dist/
        du -sh dist/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.19.0'
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 7
        
  # 性能和包大小分析
  performance:
    name: Performance Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build for analysis
      run: pnpm run build
      
    - name: Bundle size analysis
      run: |
        echo "## Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
        echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
        echo "|------|------|" >> $GITHUB_STEP_SUMMARY
        find dist -name "*.js" -o -name "*.css" | while read file; do
          size=$(du -h "$file" | cut -f1)
          echo "| $(basename "$file") | $size |" >> $GITHUB_STEP_SUMMARY
        done
        
    - name: Dependency audit
      run: |
        pnpm audit --audit-level moderate
        echo "## Security Audit Summary" >> $GITHUB_STEP_SUMMARY
        pnpm audit --audit-level moderate --json | jq -r '.metadata | "Total vulnerabilities: \(.vulnerabilities.total)"' >> $GITHUB_STEP_SUMMARY || echo "No vulnerabilities found" >> $GITHUB_STEP_SUMMARY