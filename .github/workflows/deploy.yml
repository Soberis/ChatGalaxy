# ChatGalaxy Deployment Pipeline - Simplified
# 简化的部署工作流，专注核心部署功能

name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.16.0'
  PYTHON_VERSION: '3.11'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # 前端部署到Vercel
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
        
    - name: Pull Vercel environment
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
    - name: Build project
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
    - name: Deploy to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deployment summary
      run: |
        echo "## Frontend Deployment" >> $GITHUB_STEP_SUMMARY
        echo "✅ Successfully deployed to Vercel" >> $GITHUB_STEP_SUMMARY
        echo "🔗 Production URL: https://chatgalaxy-ai.vercel.app" >> $GITHUB_STEP_SUMMARY
          
  # 后端部署到Render（可选）
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Deploy to Render
      run: |
        echo "## Backend Deployment" >> $GITHUB_STEP_SUMMARY
        echo "Backend deployment configured for manual trigger" >> $GITHUB_STEP_SUMMARY
        echo "Use Render dashboard for backend deployments" >> $GITHUB_STEP_SUMMARY
          
  # 部署后验证
  post-deploy-verification:
    name: Post-deployment Verification
    runs-on: ubuntu-latest
    needs: [deploy-frontend]
    if: always() && needs.deploy-frontend.result == 'success'
    
    steps:
    - name: Frontend health check
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 30
        
        if curl -f https://chatgalaxy-ai.vercel.app; then
          echo "✅ Frontend is accessible" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Frontend health check failed" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
    - name: Deployment summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "🚀 ChatGalaxy deployment completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "📅 Deployed at: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🔗 Live URL: https://chatgalaxy-ai.vercel.app" >> $GITHUB_STEP_SUMMARY